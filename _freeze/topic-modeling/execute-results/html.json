{
  "hash": "a73eacd7c6660362b864e6ed1a26db66",
  "result": {
    "markdown": "# Topic Modeling\n\n\n\n\n\n::: {.panel-tabset}\n\n## Conduct topic modeling\n\n::: {.cell hash='topic-modeling_cache/html/unnamed-chunk-1_f15328a4783765c0d693dba3aa031a74'}\n\n```{.r .cell-code}\nconduct_lda <- function(sr = \"Python\", year = 2014) {\n  \n  input_directory <- paste0(\"/scratch1/tsranso/reddit/subreddit-posts/\", sr, \"/\", year)\n\n  message(\"Opening input directory: \", input_directory)\n  posts <- spark_read_json(sc, path = input_directory, memory = FALSE)\n  message(\"Running LDA...\")\n  lda_betas <- posts %>% ml_lda(~ selftext, \n                      k = 6, \n                      max_iter = 1, \n                      min_token_length = 4,\n                      stop_words = sparklyr::ml_default_stop_words(sc), \n                      min_df = 5) %>%\n    tidy()\n  message(\"Computed LDA\")\n  return(lda_betas)\n}\n```\n:::\n\n\n## Plot Topics\n\n::: {.cell hash='topic-modeling_cache/html/unnamed-chunk-2_3fd5a8c2d329ca7172e82a32aa050cc8'}\n\n```{.r .cell-code}\nplot_betas <- function(betas, sr = \"Python\", year = \"2014\") {\n  if (nrow(lda_betas) == 0) { return() }\n  \n  plot <- betas %>% group_by(topic) %>%\n    top_n(15, beta) %>%\n    ungroup() %>%\n    arrange(topic, -beta) %>%\n    mutate(term = reorder(term, beta)) %>%\n    ggplot(aes(term, beta, fill = factor(topic))) +\n    geom_col(show.legend = FALSE) +\n    facet_wrap(~ topic, scales = \"free\") +\n    coord_flip()\n  ggsave(filename = paste0(sr, \"-\", year, \".png\"), plot, path = \"plots/\")\n}\n```\n:::\n\n\n:::\n\n## Execute the topic modeling\n\n\n::: {.cell hash='topic-modeling_cache/html/unnamed-chunk-3_09d39a264503b61d1b3a777bba6e78a8'}\n\n```{.r .cell-code}\nfor (sub in subs_of_interest) {\n  for (y in years) {\n    if (!file.exists(paste0(\"data/lda-\", sub, \"-\", y, \".rds\"))) {\n      lda_betas <- conduct_lda(sr = sub, year = y)\n      plot_betas(betas = lda_betas, sr = sub, year = y)\n      write_rds(lda_betas, file = paste0(\"data/lda-\", sub, \"-\", y, \".rds\"))\n    } else { message(\"Already processed \", sub, \" \", y)}\n  }\n}\n```\n:::\n\n\n## Topics\n\n### r/python\n\n::: {.panel-tabset}\n\n#### 2014\n\n::: {.cell hash='topic-modeling_cache/html/unnamed-chunk-4_3104f7ba1b10f9cd8456d6d93a4fc46e'}\n\n```{.r .cell-code}\nknitr::include_graphics(\"plots/Python-2014.png\")\n```\n\n::: {.cell-output-display}\n![](plots/Python-2014.png)\n:::\n:::\n\n\n#### 2015\n\n::: {.cell hash='topic-modeling_cache/html/unnamed-chunk-5_35ef749ce4e5852ee6623a3c1dbe5c7f'}\n\n```{.r .cell-code}\nknitr::include_graphics(\"plots/Python-2015.png\")\n```\n\n::: {.cell-output-display}\n![](plots/Python-2015.png)\n:::\n:::\n\n\n#### 2016\n\n::: {.cell hash='topic-modeling_cache/html/unnamed-chunk-6_5c8418906bc4979bdb20d49a1b1e2c55'}\n\n```{.r .cell-code}\nknitr::include_graphics(\"plots/Python-2016.png\")\n```\n\n::: {.cell-output-display}\n![](plots/Python-2016.png)\n:::\n:::\n\n\n#### 2017\n\n::: {.cell hash='topic-modeling_cache/html/unnamed-chunk-7_8c5fdee87d53ece7b621c71ec8ed45a2'}\n\n```{.r .cell-code}\nknitr::include_graphics(\"plots/Python-2017.png\")\n```\n\n::: {.cell-output-display}\n![](plots/Python-2017.png)\n:::\n:::\n\n\n:::\n\n### r/learnpython\n\n::: {.panel-tabset}\n\n#### 2014\n\n::: {.cell hash='topic-modeling_cache/html/unnamed-chunk-8_54f7c4c6a0bf1854038cff73f544e23b'}\n\n```{.r .cell-code}\nknitr::include_graphics(\"plots/learnpython-2014.png\")\n```\n\n::: {.cell-output-display}\n![](plots/learnpython-2014.png)\n:::\n:::\n\n\n#### 2015\n\n::: {.cell hash='topic-modeling_cache/html/unnamed-chunk-9_18feb61a1d6e61b0fef9642d8a766e0e'}\n\n```{.r .cell-code}\nknitr::include_graphics(\"plots/learnpython-2015.png\")\n```\n\n::: {.cell-output-display}\n![](plots/learnpython-2015.png)\n:::\n:::\n\n\n#### 2016\n\n::: {.cell hash='topic-modeling_cache/html/unnamed-chunk-10_673215b8b9bfd15f5fa01a6d2b86452b'}\n\n```{.r .cell-code}\nknitr::include_graphics(\"plots/learnpython-2016.png\")\n```\n\n::: {.cell-output-display}\n![](plots/learnpython-2016.png)\n:::\n:::\n\n\n#### 2017\n\n::: {.cell hash='topic-modeling_cache/html/unnamed-chunk-11_ecf2a41408464689753ee08a39eade9d'}\n\n```{.r .cell-code}\nknitr::include_graphics(\"plots/learnpython-2017.png\")\n```\n\n::: {.cell-output-display}\n![](plots/learnpython-2017.png)\n:::\n:::\n\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}